---
import PostThumb from "./post-thumb.astro"

// Props
interface Props {
	link?: string | undefined;
	label?: string | undefined;
}

// set some defaults
const {
	link = 'rss',
	label = '',
} = Astro.props;

// Get all the blog posts
const allPosts = await Promise.all(Object.values(import.meta.glob('../pages/posts/*.md')).map(fn => fn()));
allPosts.sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));
const sortedPosts = allPosts.sort((a, b) => Date.parse(b.frontmatter.pubDate) - Date.parse(a.frontmatter.pubDate));
---

<section class="u-container post-list-wrapper">
  <div class="post-list-intro">
    {link === 'rss' ? (
      <a href="/rss.xml" class="u-subtitle underlined-link no-inline-padding">
        <span>Good old RSS</span>
        <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M5.14611 15.4269C5.14611 16.848 3.99411 18 2.57303 18C1.15196 18 0 16.848 0 15.4269C0 14.0058 1.152 12.8538 2.57307 12.8538C3.99415 12.8538 5.14611 14.0059 5.14611 15.4269ZM12.2039 17.3253C11.8682 11.1137 6.89287 6.13213 0.674638 5.79612C0.307607 5.77627 0 6.07118 0 6.43873V8.37007C0 8.70817 0.260759 8.99171 0.598138 9.01365C5.09138 9.30631 8.69303 12.899 8.98629 17.4018C9.00827 17.7392 9.29181 17.9999 9.62987 17.9999H11.5612C11.9288 18 12.2237 17.6924 12.2039 17.3253ZM17.9996 17.3369C17.6623 7.94237 10.1035 0.339323 0.663066 0.000417489C0.300254 -0.0126003 0 0.280501 0 0.643514V2.57481C0 2.92135 0.27462 3.2034 0.620879 3.21763C8.30217 3.53258 14.4675 9.69905 14.7824 17.3791C14.7966 17.7254 15.0786 18 15.4252 18H17.3565C17.7195 18 18.0126 17.6997 17.9996 17.3369Z" fill="#6D4EB1"/>
        </svg>
      </a>
    ) : link === 'blog' ? (
      <a href="/blog" class="u-subtitle underlined-link no-inline-padding"><span>All posts â†’</span></a>
    ) : (
      ''
    )}
    {label ? <p class="u-subtitle intro">{label}</p> : ''}
  </div>
  <ul class="post-list">
    {sortedPosts.map((post: any) => 
      <PostThumb 
        title={post.frontmatter.title} 
        url={post.url}
        description={post.frontmatter.description}
        edition={post.frontmatter.edition}
        pubDate={post.frontmatter.pubDate}
      />
    )}
  </ul>
</section>

<style>
  .post-list-intro {		
		padding-block: var(--space-m);		
		display: flex;
		justify-content: space-between;
    align-items: center;
    flex-direction: row-reverse;

    @media (min-width: 600px) {
      border-inline-start: 2px solid var(--border-primary);
      margin-inline-start: var(--space-xl);    
      padding-inline-start: var(--space-m);
    }

    @media (min-width: 1000px) {
      /* .post-list padding + post-thumb__meta width */
		  margin-inline-start: calc(var(--space-xl) + 250px);
      padding-inline-start: var(--space-xl);
    }

		.intro {
			color: var(--text-secondary);
		}

    a.underlined-link {
      display: flex;
      align-items: center;
      gap: var(--space-2xs);
    }
	}

	.post-list {
		max-width: max(900px, 70%);

    @media (min-width: 600px) {
      padding-inline-start: var(--space-xl);
    }

		.post-thumb:last-of-type {

      .post-thumb__meta,
      .post-thumb__content {
        /* padding-block-end: 0; */
      }
		}

		&::after {
			content: '';
			display: block;
			height: var(--space-2xl);
      margin-inline-start: 0;
			width: 2px;      

      @media (min-width: 600px) {
        border-inline-end: 2px solid var(--border-primary);
      }

      @media (min-width: 1000px) {
        /* post-thumb__meta width */
        margin-inline-start: 250px;
      }
		}
	}
</style>