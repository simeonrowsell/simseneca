---
import { getCollection, render } from 'astro:content';
import { Image } from 'astro:assets';

import BaseLayout from '../layouts/base-layout.astro';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  // Define the collection
  const pages = await getCollection('pages');
  // Return an array with the paths and props for each entry
  return pages.map(page => ({
    params: { slug: page.slug },
    props: { page },
  }));
}
// 2. Get the entry directly from the prop
const { page } = Astro.props;
const { Content } = await render(page);

// Format page meta title and description
const metaTitleUnformatted = page.data.metaTitle ?? page.data.title;
const metaTitleFormatted = metaTitleUnformatted + " | Sim Seneca";
const metaDescription = page.data.metaDescription ?? page.data.intro;

---

<BaseLayout
  metaTitle={metaTitleFormatted}
	title={page.data.title}
  description={metaDescription}
  collection='pages'
>
  <section class="standard-wrapper u-mrg-be-l">
    <div class="u-container">
      <div class="standard-inner">
        <div class="standard-intro u-pad-bs-3xl u-pad-be-2xl">
          <h1 class="u-pad-be-2xs title">/ {page.data.title}</h1>
          <h2 class="u-fontsize-4 u-pad-be-m">
            {page.data.intro}
          </h2>
          <p class="updated u-subtitle">Last updated: {page.data.updated}</p>
        </div>
        <div class="standard-content u-pad-be-2xl u-wysiwyg">
          <Content />
        </div>        
      </div>
    </div>      
  </section>
</BaseLayout>

<style>

  .standard-inner {
    --content-left-padding: 0;
    --max-content-width: min(800px, 100%);    

    @media (min-width: 400px) {
      --content-left-padding: var(--space-m);
    }

    @media (min-width: 700px) {
      --content-left-padding: var(--space-xl);
    }

    @media (min-width: 1000px) {
      --content-left-padding: var(--space-2xl);
    }
  }

  .standard-intro {
    padding-inline-start: var(--content-left-padding);
    max-width: var(--max-content-width);

    @media (min-width: 400px) {
      border-inline-start: 2px solid var(--border-primary);
    }

    h2 {
      text-wrap: pretty;
      color: var(--accent-2);
    }

    .updated {
      color: var(--text-secondary);
    }
  }

  .standard-content {
    padding-inline-start: var(--content-left-padding);
    max-width: var(--max-content-width);

    @media (min-width: 400px) {
      border-inline-start: 2px solid var(--border-primary);
    }

    h1:before,
    h2:before,
    h3:before,
    h4:before {
      content: '';
      position: absolute;
      top: 50%;
      left: calc(var(--content-left-padding) * -1);
      width: calc(var(--content-left-padding) / 2);
      height: 2px;
      background: var(--border-primary);
      display: block;
    }

    .icon-bullets {
      display: flex;
      flex-direction: column;
      gap: var(--space-xs);
      padding-inline-start: 0;
      margin-block-end: var(--space-m);

      li {
        display: flex;
        align-items: flex-start;
        gap: var(--space-xs);

        svg {
          transform: translateY(10px);  
        }
      }
    }

  }

</style>