---
import { getCollection, render } from 'astro:content';
import { Image } from 'astro:assets';

import BaseLayout from '../../layouts/base-layout.astro';
import LoudTakeaway from '../../components/loud-takeaway.astro';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  // Define the collection
  const works = await getCollection('work');
  // Return an array with the paths and props for each entry
  return works.map(work => ({
    params: { slug: work.slug },
    props: { work },
  }));
}
// 2. Get the entry directly from the prop
const { work } = Astro.props;
const { Content } = await render(work);

// Allow markdown in the intro
import { marked } from 'marked';
const processedIntro = marked(work.data.intro);

// Format page meta title
const pageTiteUnformatted = work.data.title ? work.data.metaTitle : work.data.title;
const pageTitleFormatted = pageTiteUnformatted + " | Sim Seneca";

---

<BaseLayout
  metaTitle={pageTitleFormatted}
	title={work.data.title}
  description={work.data.metaDescription}
  collection='work'
>

	<article class="work-wrapper u-mrg-be-3xl">
		<div class="u-container">
      <div class="work-inner">
        <div class="work-header u-pad-b-xl">
          {work.data.cover && (
            <Image src={work.data.cover} alt={work.data.coverAlt} class="work-header__image u-mrg-be-l" />
          )}          
          <h1 class="u-font-display u-fontsize-5">{work.data.title}</h1>
        </div>
        <div class="work-intro u-mrg-be-l">          
          <div class="work-intro__skills">
            <ul class="skills-list">
              {work.data.skills.map(skill => (
                <li class="skills-list__skill u-fontsize-1">{skill}</li>
              ))}
            </ul>
          </div>
          <div class="work-intro__copy">
            <p class="pre-heading u-subtitle u-mrg-be-xs">
              {work.data.introPreheading ? work.data.introPreheading : 'Intro'}
            </p>
            <h3 class="intro u-wysiwyg" set:html={processedIntro}></h3>
          </div>
        </div>
        <div class="work-takeaways">
          <p class="pre-heading u-subtitle u-mrg-be-xs">{work.data.takeawaysPreheading}</p>
          <ol class="takeaways-wrapper">
            {work.data.takeaways.map(burger => (
              <LoudTakeaway title={burger.title} number={burger.number} moreLink={burger.moreLink} />
            ))}
          </ol>
        </div>
        <div class="work-content u-wysiwyg">
          <slot />
          <Content />
        </div>
      </div>
    </div>
	</article>
</BaseLayout>

<style>

  .work-inner {
    --max-content-width: min(800px, 100%);
    max-width: var(--max-content-width);
    margin: 0 auto;
    position: relative;
  
    @media (min-width: 1200px) {
      --max-content-width: min(1000px, 100%);
    }
  }
  
  .work-header {
    border-bottom: 2px solid var(--border-primary);
  
    h1 {
      color: var(--accent-2);
    }

    img {
      max-width: 100%;
      height: auto;
      border-radius: 10px;
      border: 2px solid var(--border-primary);
    }
  }
  
  .work-intro {
    display: flex;
    flex-direction: column;
    
    @media (min-width: 1200px) {
      flex-direction: row-reverse;
      gap: var(--space-l);    
    }
  
    .work-intro__skills {
      margin-block: var(--space-xl);
  
      @media (min-width: 1200px) {
        margin-block-start: calc(var(--space-xl) + var(--space-l));
        margin-block-end: 0;
      } 
  
      .skills-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: var(--space-s);
        list-style-type: none;
  
        .skills-list__skill {
          display: flex;
  
          &:before {
            display: flex;
            font-size: var(--fontsize-3);
            height: 40px;
            width: 43px;
            content: url('../../assets/icons/purple_check.svg');
            margin-inline-end: var(--space-xs);
            border: 3px solid var(--bg-fourth);
            border-radius: 5px;
            align-items: flex-end;
            justify-content: center;
            background: var(--bg-fourth);
            flex-shrink: 0;
            font-size: 30px;
          }
        }
      }
    }
  
    .work-intro__copy {
      
      @media (min-width: 1200px) {
        padding-block-start: var(--space-xl);
        padding-inline-end: var(--space-l);
        border-inline-end: 2px solid var(--border-primary);
        max-width: min(720px, 100%);
        position: relative;
  
        &:after {
          /* Fake border visually joining up elements */
          content: "";
          display: block;
          position: absolute;
          height: var(--space-2xl);
          width: 2px;
          background-color: var(--border-primary);
          bottom: calc(-1* var(--space-2xl));
          right: -2px;
        }
      }
  
      .pre-heading {
        color: var(--accent-2);
      }

      .intro p {
        font-size: var(--fontsize-2);
      }
    }
  }
  
  .work-takeaways {
    
    .pre-heading {
      color: var(--accent-2);
    }
  
    .takeaways-wrapper {
      display: grid;
      gap: var(--space-s);
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      list-style-type: none;
  
      @media (min-width: 1200px) {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  }
  
  .work-content {
    position: relative;
  
    /* all children other than the children which have <img> in them */
    >:not(:has(img)) {
      @media (min-width: 1200px) {
        max-width: min(720px, 100%);
      }
    }    
  
    h2 {
      border-top: 2px solid var(--border-primary);
      margin-block-start: var(--space-2xl);
      padding-block-start: var(--space-s);
      margin-block-end: var(--space-l);
    }

    img {
      background-color: var(--bg-fourth);
    }
  }
  
</style>